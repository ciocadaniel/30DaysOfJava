git init   ==> faurire gti repo in local
git status ==> verificare fisiere in staging
git add numefiser.extensie  ==> adaugare fisier cu numele ala
git add *.txt   ==> adaugare in stage a tutror fisierelor presente cu extensia txt
git add .   ==> adaugare in stage a tutror fisierelor presente

git rm --cached filename -r   ==> remove file from staging
git ls-files   ==> verificare cater files avem in stageing

Daca se sterg fiserele manual, staging se actualizeaza cu git add .

git restore --staged numefisier   ==> Pentru restaurare fisier sters din stage
git branch  ==> verificare branch
git branch name  ==> creare branch .  Noul branch va avea acelasi nevel ca branchul din care a fost creat
git checkout name  ==> schimbare branch

Daca se lucreaza pe un branck secundar, trebuie sa se faca update cu branch-ul principal (master) pt ca acela va face upload pe hithub

gid merge nume_branch_secundar   ==> se trece pe branch master apoi se executa comanda si se actualizeaza branch master

git checkout -b nume_branch  ==> creare branch si trecere pe el

git remote add origin https://github.com/ciocadaniel/30DaysOfJava.git   ==> adaugare remote repository ( github )

git remote -v   ==> verificare continut github repository

git push -u origin master  ==> creare branch master pe github si sicronizare
git push    ==> sincornizare branch master local cu master ithub ( cand se face push trebuie sa fim pe branch master )

git clone https://github.com/ciocadaniel/30DaysOfJava  ==> pt un nou user se aduce local tot ce este pe server 
    ( initial pt acest user trebuie deschis terminalul in folderul unde se face aduce clonarea )

git fetch  ==> verifica daca e diferenta intre continutul local si cel remote
git pull   ==> se face update din remote catre localee

